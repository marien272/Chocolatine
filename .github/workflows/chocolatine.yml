name: Chocolatine CI/CD

on:
  push:
    branches-ignore:
      - "ga-ignore-"
  pull_request:
    branches-ignore:
      - "ga-ignore-"

jobs:
  check_and_build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout du dépôt
        uses: actions/checkout@v2

      - name: Vérification du style de codage
        run: check.sh . /tmp

      - name: Créer des annotations pour les erreurs de style de codage
        run: |
          input=/tmp/coding-style-reports.log
          while IFS= read -r -a line; do
            fields=($(printf "%s" "$line"|cut -d':' --output-delimiter=' ' -f1-))
            echo "::error title=${fields[2]} erreur de style de codage,file=${fields[0]},line=${fields[1]}::${fields[3]}"
          done < $input

      - name: Rapport du résultat
        run: |
          NB_ERROR=$(cat /tmp/coding-style-reports.log | wc -l)
          if [ $NB_ERROR -gt 0 ]; then
            exit 1
          fi

      - name: Compilation du programme
        run: make

      - name: Nettoyage du programme
        run: make clean

      - name: Vérification de l'existence et de l'exécution des fichiers
        run: |
          for file in ${{ vars.EXECUTABLES }};do
             if [ ! -x "$file" ]; then
              echo "Le fichier $file n'existe pas ou n'est pas exécutable"
              exit 1
            fi
          done

      - name: Exécution des tests
        run: make tests_run

  push_to_mirror:
    runs-on: ubuntu-latest
    needs: check_and_build
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url: ${{ vars.MIRROR_URL }}
          ssh_private_key: ${{ secrets.GIT_SSH_PRIVATE_KEY }}